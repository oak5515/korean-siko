const Discord = require('discord.js');
const { send } = require('process');
const client = new Discord.Client();
const token = process.env.token;
const welcomeChannelName = "안녕하세요";
const byeChannelName = "안녕히가세요";
const welcomeChannelComment = "어서오세요.";
const byeChannelComment = "안녕히가세요.";

client.on('ready', () => {
    console.log('켰다.');
});

client.on("guildMemberAdd", (member) => {
  const guild = member.guild;
  const newUser = member.user;
  const welcomeChannel = guild.channels.find(channel => channel.name == welcomeChannelName);

  welcomeChannel.send(`<@${newUser.id}> ${welcomeChannelComment}\n`);

  member.addRole(guild.roles.find(role => role.name == "게스트"));
});

client.on("guildMemberRemove", (member) => {
  const guild = member.guild;
  const deleteUser = member.user;
  const byeChannel = guild.channels.find(channel => channel.name == byeChannelName);

  byeChannel.send(`<@${deleteUser.id}> ${byeChannelComment}\n`);
});

client.on('message', (message) => {
  if(message.author.bot) return;

  if(message.content == '시코야 현재 핑') {
    return message.reply('지금 올라오는 메세지와 방금 입력하신 메세지의 간격이 현재 핑 상태입니다.');
  }

  //시코봇 기타 말
  if(message.content == '시코야') {
    return message.reply('부르셨습니까?');
  }

  if(message.content == '시코야 좋은 아침') {
    return message.channel.send(`<@${message.author.id}>` + "님, 좋은 아침입니다.");
  }

  if(message.content == '시코야 안녕') {
    return message.channel.send("안녕하십니까, " + `<@${message.author.id}>` + "님.")
  }

  if(message.content == '시코야 채아리') {
    return message.channel.send('저를 만들어주신 창조주님이십니다.')
  }

  if(message.content == '시코야 김승뭔') {
    return message.channel.send('창조주님의 의형제님을 말씀하시는지요?')
  }

  if(message.content == '시코야 연유병') {
    return message.channel.send('창조주님의 의남매님을 말씀하시는지요?')
  }

  //시코봇 도움말
  if(message.content == '시코야 자기소개') {
    let img = 'https://cdn.discordapp.com/attachments/756513236823572493/756782002748915712/20200918_224442.png';
    let embed = new Discord.RichEmbed()
      .setTitle('이름 : 코리안시코')
      .setThumbnail(img)
      .addBlankField()
      .addField('영문 이름', 'Korean Siko')
      .addField('아버지', '코리안식스', true)
      .addField('어머니', '시식둥이', true)
      .addField('오빠', '애플민트둥이', true)
      .addField('특이사항', '말투: 딱딱함\n창조주: 채아리\n간단소개말: 안녕하십니까. 시코봇입니다.\n')
      .addBlankField()
      .setTimestamp()
      .setFooter('Made by 채아리, Profile Picture by @__kkung__ CM', img)

    message.channel.send(embed)
  } else if(message.content == '시코야 도움말') {
    let helpImg = 'https://images-ext-1.discordapp.net/external/RyofVqSAVAi0H9-1yK6M8NGy2grU5TWZkLadG-rwqk0/https/i.imgur.com/EZRAPxR.png';
    let commandList = [
      {name: '시코야 현재 핑', desc: '현재 핑 체감'},
      {name: '시코야 도움말', desc: '시코봇의 사용 방법을 안내해드립니다.'},
      {name: '시코야 (할 말)', desc: '(할 말) 안에 다른 말을 집어넣어 시코봇의 반응을 볼 수 있습니다.'},
    ];
    let commandStr = '';
    let embed = new Discord.RichEmbed()
      .setAuthor('시코봇 도움말!', helpImg)
      .setColor('#186de6')
      .setFooter(`Made by 채아리, Profile Picture by @__kkung__ CM`)
      .setTimestamp()
    
    commandList.forEach(x => {
      commandStr += `• \`\`${changeCommandStringLength(`${x.name}`)}\`\` : **${x.desc}**\n`;
    });

    embed.addField('Commands: ', commandStr);

    message.channel.send(embed)
  }

  if(message.content.startsWith('시코야 전체공지')) {
    if(checkPermission(message)) return
    if(message.member != null) { // 채널에서 공지 쓸 때
      let contents = message.content.slice('시코야 전체공지'.length);
      message.member.guild.members.array().forEach(x => {
        if(x.user.bot) return;
        x.user.send(`<@${message.author.id}> ${contents}`);
      });
  
      return message.reply('공지를 전송했습니다.');
    } else {
      return message.reply('채널에서 실행해주세요.');
    }
  }
});

function checkPermission(message) {
  if(!message.member.hasPermission("MANAGE_MESSAGES")) {
    message.channel.send(`<@${message.author.id}> ` + "명령어를 수행할 관리자 권한을 소지하고 있지않습니다.")
    return true;
  } else {
    return false;
  }
}

function changeCommandStringLength(str, limitLen = 8) {
  let tmp = str;
  limitLen -= tmp.length;

  for(let i=0;i<limitLen;i++) {
      tmp += ' ';
  }

  return tmp;
}


client.login(token);